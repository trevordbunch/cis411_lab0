# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

  # This job tests whether the project initially starts in the execution environment.
  # A better unit test would probably test the functionality of sections of code in server.js,
  # but this seemed like a good starting point.
  unit-test-starting:
    docker:
      - image: cimg/base:stable
    
    steps:
      - checkout
      - run:
          name: "Install tools"
          command: "sudo apt-get install nodejs npm"

      - run:
          name: "Install dependency"
          command: "npm install express"

      - run:
          name: "NPM start"
          command: "npm start"
          background: true

      # Makes sure CircleCI recognizes if 'npm start' encountered an error.
      # This will at least show up in the above step.
      - run:
          name: "Sleep"
          command: "sleep 5s"

      - run: # Otherwise npm will run forever.
          name: "Stop circleci"
          command: circleci-agent step halt

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  testing-environment-workflow:
    jobs:
      - say-hello
      - unit-test-starting
